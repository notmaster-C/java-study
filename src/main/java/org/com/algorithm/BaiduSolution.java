package org.com.algorithm;

public class BaiduSolution {
    public void solution3(){
        /*
         * 使用Java输出：对于两个字符串，如果他们逐位相等，那么便称这两个字符串相等，但是大多数情况下，字符串是不相等的，所以小度定义如果将几种字符修改成字符之后，两个字符串就相等了。
         * 现在给定一个长度为n的仅包含小写字母的字符串S，多次询问对于该字符串的[l1,r1]子串与[l2,r2]子串是否相等
         * 如果不相等，那么将他们变成好像相等，至少需要将多少种字符修改成*，并输出字符种类。
         * 输入格式：第1行读入2个数字度，以及询问的次数；n，q，分别代表字符串长第2行读入—个字符串8母，
         * 保证该字符均为小写字随后q 行每行读入4个正数据范围保证1≤整数l1，1,l2，r2;l,l2,r1,r2≤n.nq≤10,1≤r1-l1=r2-l2。l1≤r1,l2≤r2
         * 输出格式：对于每次询问，输出两行：第一行输出至少需要将多少种字符修改成*，
         * 如果出两个字符串完全相等，则输出0，第二行从小到大输出需要修改的字符种类，。中间不间隔
         *示例：
         * 输入：9 3
         * abccbedbe
         * 5 6 8 9
         * 1 3 4 6
         * 1 3 7 9
         * 输出： 0
         *
         * 3
         * ace
         * 4
         * acde
         *  */
    }
    public void so5(){
        /*
         * 使用Java解决：小度有一个只由小写字母组成的字符串8，
         * 还有一个只由小写字母‘*’，'+'组成的字符串t，他需要将这两个字符串进行匹配。
         * 对于字符串t,其中‘*’表示这个位置可以匹配任意非负整数个字母，’+‘表示这个位置可以匹配任意正整数个字母，
         * 而普通的小写字母只能匹配1个对应的小写字母。例如，t为“*a+”则t可以与“abc","cbabc"匹配，但不可以与”bca"匹配，（‘+’没有匹配到）
         * ，小度需要在8中找到一个最长的子串，使得字串可以匹配字符串t,求字串最长的长度，若无解，输出-1
         * 实例：maruyama
         * a*ya
         * 返回 5
         */
    }
    public void solution6(){
        /*
         * 小度家的汽修厂是一个树形结构，有n个节点， 每个节点停放了一辆车，每一辆车都是粉色或其它颜色的。
         * 小度想将粉色的车都停在-起，然后剪切掉一条树边，使得粉色的车在同一个连通块，其他颜色的车在另一个连通块。
         * 每1个单位时间，小度都可以交换两个相邻节点上的车，剪切树边不需要消耗时间，
         * 他想知道做到上述要求最少需要几个单位时间?若无解则输出-1
         * 输入格式:
         * 第1行输入1个整数n(l≤n≤5x105)表示汽车救量:
         * 第2行输入1个长度为n的字符串，S表示车的颜色，第i个节点上的车的颜色为Si;
         * 第i个节点上的车的颜色为8若S为P表示车的颜色为粉色，若S为O则表示车的颜色为其他颐色；
         * 接下来n-1行，每行输入两个整数u,u（1<u,u＜n)表示树上的边
         * */
//        public class Main {
//
//            public static void main(String[] args) {
//                Scanner input = new Scanner(System.in);
////        code  here
//                input.close();
//            }
//        }

    }
}
